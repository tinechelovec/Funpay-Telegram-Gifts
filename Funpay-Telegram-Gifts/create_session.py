import asyncio
import os
from dotenv import load_dotenv
from pyrogram import Client, filters
from pyrogram.handlers import MessageHandler

if not hasattr(Client, "send_gift"):
    raise RuntimeError(
        "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –ø–∞–∫–µ—Ç 'pyrogram'. –ù—É–∂–µ–Ω —Ñ–æ—Ä–∫ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Stars.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: pip uninstall -y pyrogram && pip install -U pyrofork tgcrypto"
    )

load_dotenv()
API_ID = os.getenv("API_ID")
API_HASH = os.getenv("API_HASH")

if not API_ID or not API_HASH:
    raise SystemExit("–í .env –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å API_ID –∏ API_HASH –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞.")

API_ID = int(API_ID)

TIMEOUT = 30
WARNING = "‚ö†Ô∏è –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ 30 —Å–µ–∫—É–Ω–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –ü–ö –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç."

async def wait_first_message(app: Client, timeout: int) -> bool:
    first_msg_event = asyncio.Event()

    async def on_msg(_, __):
        if not first_msg_event.is_set():
            first_msg_event.set()

    handler = MessageHandler(on_msg, filters.incoming)
    app.add_handler(handler)

    try:
        await asyncio.wait_for(first_msg_event.wait(), timeout=timeout)
        return True
    except asyncio.TimeoutError:
        return False
    finally:
        app.remove_handler(handler)

async def main():
    app = Client("stars", api_id=API_ID, api_hash=API_HASH, workdir="sessions")
    started = False
    try:
        await asyncio.wait_for(app.start(), timeout=TIMEOUT)
        started = True

        got_first = await wait_first_message(app, TIMEOUT)
        if not got_first:
            print(WARNING)

        me = await asyncio.wait_for(app.get_me(), timeout=TIMEOUT)
        bal = await asyncio.wait_for(app.get_stars_balance(), timeout=TIMEOUT)

        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –∫–∞–∫ {me.first_name} (ID: {me.id})")
        print(f"üåü –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –∑–≤—ë–∑–¥: {bal}")

    except asyncio.TimeoutError:
        print("‚ö†Ô∏è –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ 30 —Å–µ–∫—É–Ω–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –ü–ö –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç.")
    finally:
        if started:
            try:
                await app.stop()
            except Exception:
                pass

if __name__ == "__main__":
    asyncio.run(main())
